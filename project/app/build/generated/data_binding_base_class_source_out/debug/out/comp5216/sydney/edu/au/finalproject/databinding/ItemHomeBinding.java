// Generated by view binder compiler. Do not edit!
package comp5216.sydney.edu.au.finalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.drawee.view.SimpleDraweeView;
import comp5216.sydney.edu.au.finalproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemHomeBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView postContent;

  @NonNull
  public final ImageView postIv;

  @NonNull
  public final ImageView postLike;

  @NonNull
  public final TextView postUsername;

  @NonNull
  public final SimpleDraweeView userPhoto;

  private ItemHomeBinding(@NonNull LinearLayout rootView, @NonNull TextView postContent,
      @NonNull ImageView postIv, @NonNull ImageView postLike, @NonNull TextView postUsername,
      @NonNull SimpleDraweeView userPhoto) {
    this.rootView = rootView;
    this.postContent = postContent;
    this.postIv = postIv;
    this.postLike = postLike;
    this.postUsername = postUsername;
    this.userPhoto = userPhoto;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.post_content;
      TextView postContent = ViewBindings.findChildViewById(rootView, id);
      if (postContent == null) {
        break missingId;
      }

      id = R.id.post_iv;
      ImageView postIv = ViewBindings.findChildViewById(rootView, id);
      if (postIv == null) {
        break missingId;
      }

      id = R.id.post_like;
      ImageView postLike = ViewBindings.findChildViewById(rootView, id);
      if (postLike == null) {
        break missingId;
      }

      id = R.id.post_username;
      TextView postUsername = ViewBindings.findChildViewById(rootView, id);
      if (postUsername == null) {
        break missingId;
      }

      id = R.id.user_photo;
      SimpleDraweeView userPhoto = ViewBindings.findChildViewById(rootView, id);
      if (userPhoto == null) {
        break missingId;
      }

      return new ItemHomeBinding((LinearLayout) rootView, postContent, postIv, postLike,
          postUsername, userPhoto);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
