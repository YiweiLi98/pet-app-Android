// Generated by view binder compiler. Do not edit!
package comp5216.sydney.edu.au.finalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.facebook.drawee.view.SimpleDraweeView;
import comp5216.sydney.edu.au.finalproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemPetBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView petDesc;

  @NonNull
  public final TextView petName;

  @NonNull
  public final SimpleDraweeView petPhoto;

  @NonNull
  public final TextView petType;

  private ItemPetBinding(@NonNull LinearLayout rootView, @NonNull TextView petDesc,
      @NonNull TextView petName, @NonNull SimpleDraweeView petPhoto, @NonNull TextView petType) {
    this.rootView = rootView;
    this.petDesc = petDesc;
    this.petName = petName;
    this.petPhoto = petPhoto;
    this.petType = petType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPetBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_pet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.pet_desc;
      TextView petDesc = ViewBindings.findChildViewById(rootView, id);
      if (petDesc == null) {
        break missingId;
      }

      id = R.id.pet_name;
      TextView petName = ViewBindings.findChildViewById(rootView, id);
      if (petName == null) {
        break missingId;
      }

      id = R.id.pet_photo;
      SimpleDraweeView petPhoto = ViewBindings.findChildViewById(rootView, id);
      if (petPhoto == null) {
        break missingId;
      }

      id = R.id.pet_type;
      TextView petType = ViewBindings.findChildViewById(rootView, id);
      if (petType == null) {
        break missingId;
      }

      return new ItemPetBinding((LinearLayout) rootView, petDesc, petName, petPhoto, petType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
