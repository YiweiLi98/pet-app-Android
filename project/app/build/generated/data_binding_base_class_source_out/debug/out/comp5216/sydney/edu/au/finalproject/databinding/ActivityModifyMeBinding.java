// Generated by view binder compiler. Do not edit!
package comp5216.sydney.edu.au.finalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import comp5216.sydney.edu.au.finalproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityModifyMeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnBack;

  @NonNull
  public final Button btnModify;

  @NonNull
  public final EditText etDescription;

  @NonNull
  public final EditText etNickName;

  @NonNull
  public final ImageView ivAvatar;

  private ActivityModifyMeBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnBack,
      @NonNull Button btnModify, @NonNull EditText etDescription, @NonNull EditText etNickName,
      @NonNull ImageView ivAvatar) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnModify = btnModify;
    this.etDescription = etDescription;
    this.etNickName = etNickName;
    this.ivAvatar = ivAvatar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityModifyMeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityModifyMeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_modify_me, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityModifyMeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBack;
      Button btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnModify;
      Button btnModify = ViewBindings.findChildViewById(rootView, id);
      if (btnModify == null) {
        break missingId;
      }

      id = R.id.etDescription;
      EditText etDescription = ViewBindings.findChildViewById(rootView, id);
      if (etDescription == null) {
        break missingId;
      }

      id = R.id.etNickName;
      EditText etNickName = ViewBindings.findChildViewById(rootView, id);
      if (etNickName == null) {
        break missingId;
      }

      id = R.id.ivAvatar;
      ImageView ivAvatar = ViewBindings.findChildViewById(rootView, id);
      if (ivAvatar == null) {
        break missingId;
      }

      return new ActivityModifyMeBinding((ConstraintLayout) rootView, btnBack, btnModify,
          etDescription, etNickName, ivAvatar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
